@page "/datagrid-filter-template"
@using System.Linq.Dynamic.Core

<h1>DataGrid custom Column FilterTemplate</h1>

<p>This page demonstrates how to define custom DataGrid column filter template.</p>

<Property365ComponentContainer Name="DataGrid" Source="DataGridColumnFilterTemplate" Heading="false">
    @if (employees == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h3>Custom filtering template with IQueryable binding</h3>
         <Property365DataGrid @ref="grid" Data=@employees FilterMode="FilterMode.Simple" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="Employee" ColumnWidth="200px">
            <Columns>
                <Property365DataGridColumn TItem="Employee" Property="ID" Title="ID" />
                <Property365DataGridColumn TItem="Employee" Title="Customer" Property="CompanyName" Type="typeof(IEnumerable<string>)" 
                        FilterValue="@selectedCompanyNames" FilterOperator="FilterOperator.Contains" LogicalFilterOperator="LogicalFilterOperator.Or">
                    <FilterTemplate>
                        <Property365DropDown @bind-Value=@selectedCompanyNames Style="width:100%;"
                            Change=@OnSelectedCompanyNamesChange Data="@(companyNames)" AllowClear="true" Multiple="true" />
                    </FilterTemplate>
                </Property365DataGridColumn>
                <Property365DataGridColumn TItem="Employee" Property="TitleOfCourtesy" Title="Title Of Courtesy" 
                    FilterValue="@currentTOC">
                    <FilterTemplate>
                        <Property365DropDown @bind-Value="@currentTOC" TextProperty="Text" ValueProperty="Value" Style="width:100%;"
                                        Change=@OnSelectedTOCChange
                                        Data="@(Enum.GetValues(typeof(TitleOfCourtesy)).Cast<TitleOfCourtesy?>().Select(t => new { Text = $"{t}", Value = t == TitleOfCourtesy.All ? null : t }))" />
                    </FilterTemplate>
                </Property365DataGridColumn>
            </Columns>
        </Property365DataGrid>
    }
</Property365ComponentContainer>

@code {
    Property365DataGrid<Employee> grid;

    TitleOfCourtesy? currentTOC;
    IEnumerable<string> selectedCompanyNames;

    List<string> companyNames = new List<string> {"Vins et alcools Chevalier", "Toms Spezialitäten", "Hanari Carnes", "Richter Supermarkt", "Wellington Importadora", "Centro comercial Moctezuma" };

    public enum TitleOfCourtesy
    {
        Ms,
        Mr,
        All = -1
    }

    public class Employee
    {
        public int ID { get; set; }
        public string CompanyName { get; set; }
        public TitleOfCourtesy TitleOfCourtesy { get; set; }
    }

    void OnSelectedCompanyNamesChange(object value)
    {
        if (selectedCompanyNames != null && !selectedCompanyNames.Any())
        {
            selectedCompanyNames = null;  
        }
    }

    void OnSelectedTOCChange(object value)
    {
        if (currentTOC == TitleOfCourtesy.All)
        {
            currentTOC = null;
        }
    }

    IEnumerable<Employee> employees; 

    protected override async Task OnInitializedAsync()
    {
        employees = await Task.FromResult(Enumerable.Range(0, 10).Select(i =>
            new Employee
            {
                ID = i,
                CompanyName = i < 4 ? companyNames[0] : companyNames[i - 4],
                TitleOfCourtesy = i < 5 ? TitleOfCourtesy.Mr : TitleOfCourtesy.Ms
            }).AsQueryable());
    }
}
