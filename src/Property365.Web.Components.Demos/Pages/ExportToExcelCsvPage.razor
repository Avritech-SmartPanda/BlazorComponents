@page "/export-excel-csv"

@using Property365.Web.Components.Demos.Data
@using Property365.Web.Components.Demos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inject NorthwindContext dbContext
@inject NorthwindService service

<h1>Export to Excel and CSV</h1>

<p>This page demonstrates how to export a Property365 Blazor DataGrid to Excel and CSV.</p>

<Property365ComponentContainer Name="DataGrid" Source="ExportToExcelCsv" Heading="false">
    <Property365Button Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" Class="mb-4 mr-2" /><Property365Button Text="Export CSV" Icon="wrap_text" Click="@(args => Export("csv"))" Class="mb-4" />
    <Property365DataGrid @ref="grid" AllowColumnPicking="true" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@orderDetails" TItem="OrderDetail">
        <Columns>
            <Property365DataGridColumn TItem="OrderDetail" Property="OrderID" Title="OrderID" />
            <Property365DataGridColumn TItem="OrderDetail" Property="ProductID" Title="ProductID" />
            <Property365DataGridColumn TItem="OrderDetail" Property="UnitPrice" Title="Unit Price">
                <Template Context="detail">
                    @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", detail.UnitPrice)
                </Template>
            </Property365DataGridColumn>
            <Property365DataGridColumn TItem="OrderDetail" Property="Quantity" Title="Quantity" />
            <Property365DataGridColumn TItem="OrderDetail" Property="Discount" Title="Discount" FormatString="{0:P}" />
        </Columns>
    </Property365DataGrid>
</Property365ComponentContainer>

@code {
    Property365DataGrid<OrderDetail> grid;

    IEnumerable<OrderDetail> orderDetails;

    protected override void OnInitialized()
    {
        orderDetails = dbContext.OrderDetails.ToList();
    }

    public void Export(string type)
    {
        service.Export("OrderDetails", type, new Query() 
            { 
                OrderBy = grid.Query.OrderBy, 
                Filter = grid.Query.Filter, 
                Select = string.Join(",", grid.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property)) 
            });
    }
}
