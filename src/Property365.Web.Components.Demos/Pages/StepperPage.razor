@page "/stepper"

@using Property365.Web.Components.Demos.Data
@using Property365.Web.Components.Demos.Models.Northwind
@using Microsoft.EntityFrameworkCore
@using Property365.Web.Components
@using Property365.Common
@using System.Collections.Generic

@inject NorthwindContext dbContext

<Property365ComponentContainer Name="Stepper">




    <div class="space-y-4">

        <Property365Card class="bg-white">
            <h4 class="my-3">Stepper</h4>
                <Property365FormTemplate Data="@scheme" id="AddressForm" OnValidSubmit="@((Scheme args) => { Submit(args); })">
                <DataAnnotationsValidator />
                 <Property365Stepper @ref="steps" Change=@OnStepChange FormId="@formId" NextText=@nextText>
                <Steps>
                    <Property365StepperItem Text="Scheme Details">
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full">                      
                            <div class="flex flex-col w-full sm: sm:col-span-2 space-y-2">
                                <Property365Label Text="SchemeName"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="SchemeName" @bind-Value=@SchemeName />
                                <Property365RequiredValidator Component="SchemeName" Text="SchemeName is required" class="text-red-500 " />
                            </div>

                            <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="SchemeNumber"
                                    class="block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="SchemeNumber" @bind-Value="SchemeNumber" />
                            </div>

                            <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="DeedsOffice"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="DeedsOffice" @bind-Value="DeedsOffice" />
                                <Property365RequiredValidator Component="DeedsOffice" Text="DeedsOffice is required" class="text-red-500 " />
                            </div>
                            <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="ErfNumber"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                               <Property365TextBox style="width: 100%;" Name="ErfNumber" @bind-Value="ErfNumber" />
                                <Property365RequiredValidator Component="ErfNumber" Text="ErfNumber is required"
                                    class="text-red-500 " />
                                <Property365RegexValidator Component="ErfNumber" Text="ErfNumber must be 4 digits" Pattern="\d{4}" class="text-red-500 " />
                            </div>
                              <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="ErfSize"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="ErfSize" @bind-Value="ErfSize" />
                                <Property365RequiredValidator Component="ErfSize" Text="ErfSize is required"
                                    class="text-red-500 " />
                            </div>                                                

                            <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="FloorSize"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="FloorSize" @bind-Value="FloorSize" />
                                <Property365RequiredValidator Component="FloorSize" Text="FloorSize is required"
                                    class="text-red-500 " />
                            </div>
                            <div class="flex flex-col w-full space-y-2">
                                <Property365Label Text="LPICode"
                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                <Property365TextBox style="width: 100%;" Name="LPICode" @bind-Value="LPICode" />
                                <Property365RequiredValidator Component="LPICode" Text="LPICode is required"
                                    class="text-red-500 " />
                            </div>
                           
                        </div>
                    </Property365StepperItem>
                    <Property365StepperItem Text="Address">
                    
                        @if (address == null)
                        {
                            <p><em>Loading...</em></p>
                        }
                        else
                        {
                            <div class="flex flex-col bg-light">
                                    <div class="border sm:p-14 rounded-md bg-white">
                                        <div class="flex flex-col">
                                            <ul class="grid grid-cols-3 gap-4 sm:gap-12 mb-4">
                                                @foreach (var addressType in new[] { AddressTypes.Postal, AddressTypes.Physical,
                                                AddressTypes.Residential })
                                            {
                                                <li class="relative">
                                                    <input name="addressType" id="@addressType" class="sr-only peer" type="radio"
                                                    value="@addressType" checked="@(currentType == addressType)"
                                                    @onchange="@(() => { AddressType = addressType.ToString(); currentType = addressType; })">
                                                    <label for="@addressType"
                                                    class="flex flex-col items-center p-4 bg-white border border-gray-300 rounded cursor-pointer  focus:outline-none  hover:bg-gray-50 peer-checked:ring-info-900  peer-checked:ring-2 peer-checked:border-transparent">
                                                        @switch (addressType.ToString())
                                                        {
                                                            case "Postal":
                                                                <Property365Icon Icon="mark_as_unread" />
                                                                break;
                                                            case "Physical":
                                                                <Property365Icon Icon="place" />
                                                                break;
                                                            case "Residential":
                                                                <Property365Icon Icon="home" />
                                                                break;
                                                        }
                                                        <span class="text-xs uppercase sm:text-base">@addressType.ToString()</span>
                                                    </label>
                                                </li>
                                            }
                                        </ul>
                                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full">
                                            <div class="flex flex-col w-full sm: sm:col-span-2 space-y-2">
                                                <Property365Label Text="Address Line 1"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365TextBox style="width: 100%;" Name="Line1" @bind-Value=@Line1/>
                                                <Property365RequiredValidator Component="Line1" Text="Address line 1 is required" class="text-red-500 " />
                                            </div>

                                            <div class="flex flex-col w-full  sm:col-span-2 space-y-2">
                                                <Property365Label Text="Address Line 2"
                                                    class="block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365TextBox style="width: 100%;" Name="Line2" @bind-Value="Line2" />
                                            </div>

                                            <div class="flex flex-col w-full  sm:col-span-2 space-y-2">
                                                <Property365Label Text="Surburb/Township"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365TextBox style="width: 100%;" Name="Township" @bind-Value="Township" />
                                                <Property365RequiredValidator Component="Township" Text="Surburb is required"
                                                    class="text-red-500 " />
                                            </div>

                                            <div class="flex flex-col w-full space-y-2">
                                                <Property365Label Text="City"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365TextBox style="width: 100%;" Name="CityTown" @bind-Value="CityTown" />
                                                <Property365RequiredValidator Component="CityTown" Text="City is required"
                                                    class="text-red-500 " />
                                            </div>                        

                                            <div class="flex flex-col w-full space-y-2">
                                                <Property365Label Text="State/Province/Region"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365TextBox style="width: 100%;" Name="Province" @bind-Value="Province" />
                                                <Property365RequiredValidator Component="Province" Text="Province is required"
                                                    class="text-red-500 " />
                                            </div>
                                            <div class="flex flex-col w-full space-y-2">
                                                <Property365Label Text="Zip/Postal Code"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <div class="flex flex-col">
                                                    <Property365TextBox Name="PostalCode" @bind-Value=@PostalCode />
                                                    <Property365RequiredValidator Component="PostalCode" Text="Postal code is required"
                                                        class="text-red-500 " />
                                                    <Property365RegexValidator Component="PostalCode" Text="Postal code must be 4 digits"
                                                        Pattern="\d{4}" class="text-red-500 " />
                                                </div>
                                            </div>
                                            <div class="flex flex-col w-full space-y-2">
                                                <Property365Label Text="Country"
                                                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                                                <Property365DropDown @bind-Value="CountryCode" Placeholder="South Africa"
                                                    Data="@countries" TextProperty="CountryCode.Value" ValueProperty="CountryCode.Key" Name="CountryCode">
                                                </Property365DropDown>

                                                    @* <select @bind="CountryCode" class="form-select appearance-none block w-full px-3 py-1.5 first-letter:text-base font-normal  text-gray-700 first-letter:bg-white bg-clip-padding bg-no-repeat border border-solid border-gray-300 rounded transition ease-in-out  m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" >
                                                        @foreach (var country in countries)
                                                        {
                                                            <option value="country.Key">@country.Value</option>
                                                        }
                                                    </select> *@
                                                    <Property365RequiredValidator Component="CountryCode" Text="Country is required"
                                                        class="text-red-500 " />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>                           
                            
                        }

                    </Property365StepperItem>
                </Steps>
            </Property365Stepper>
            </Property365FormTemplate>
            
           <div>Selected Index = @(steps?.SelectedIndex ?? 0)</div>
        </Property365Card>

      
    </div> 


</Property365ComponentContainer>

<EventConsole @ref=@console Class="mt-4" />
@code{
     public record Scheme( Guid Id, string? SchemeName, string? SchemeNumber, string? ErfNumber, string? DeedsOffice, string? ErfSize, string? FloorSize, Address? Address, string? LPICode);
     public Property365Stepper steps;

    string formId;
    string nextText;

    protected override async Task OnInitializedAsync()
    {
       
        formId = "AddressForm";
        nextText = "Strat";

    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }


       
    async void OnStepChange(int index)
    {

        switch (index)
        {
            case 1: // Owner
             nextText = "Finish";
             break;
            case 0: // Stock Options
            default:
                break;
        }

        StateHasChanged();
        
    }



    EventConsole console;

    Dictionary<string, string> countries =  new Dictionary<string, string>();
    public string AddressType { get; set; } = "Postal";
    public string? Line1 { get; set; }
    public string? Line2 { get; set; }
    public string? Township { get; set; }
    public string? CityTown { get; set; }
    public string? Province { get; set; }
    public string? PostalCode { get; set; }
    public string? CountryCode { get; set; }
    public Guid Id { get; set; }
    public string? SchemeName { get; set; }
    public string? SchemeNumber { get; set; }
    public string? ErfNumber;
    public string? DeedsOffice { get; set; }
    public string? ErfSize { get; set; }
    public string? FloorSize { get; set; }
    public Address? Address { get; set; }
    public string? LPICode { get; set; }

    Address address = new Address("123 Main St", "Apt. 1", "Anytown", "CA", "South Africa", "9021", "Physical", "ZA");
    Scheme scheme = new Scheme( Guid.Parse("3000defe-813a-43e3-9f19-83a679aa8f09"), "SS CLEAR WATER", "449/2004", "2940", "HIGHVELD", "449/2004", "1242.0000SQM",new Address("123 Main St", "Apt. 1", "Anytown", "CA", "South Africa", "9021", "Physical", "ZA"), "T0JR00560001200000");
    enum AddressTypes { Postal, Physical, Residential };
    AddressTypes currentType = AddressTypes.Postal; 

   
 
     
   protected override void OnInitialized()
    {
    countries.Add("ZA", "South Africa");
    countries.Add("BW", "Botswana");
    countries.Add("NA", "Namibia");
    countries.Add("SZ", "Swaziland");
    countries.Add("ZW", "Zimbabwe");
    countries.Add("LS", "Lesotho");
    countries.Add("ZM", "Zambia");
    }

    void Submit(Scheme arg)
    {
        address = address with {
            Name = AddressType,
            Line1 = Line1,
            Line2 = Line2,
            Township = Township,
            CityTown = CityTown,
            Province = Province,
            PostalCode = PostalCode,
            CountryCode = CountryCode
        }; 
        scheme = scheme with  {
            Id = Guid.Parse("3000defe-813a-43e3-9f19-83a679aa8f09"),
            SchemeName = SchemeName,
            SchemeNumber = SchemeNumber,
            ErfNumber = ErfNumber,
            DeedsOffice = DeedsOffice,
            ErfSize = ErfSize,
            FloorSize = FloorSize,
            Address = address,
            LPICode = LPICode
        };      
        console.Log($"{address.Name}, {address.Line1}, {address.Line2}, {address.Township}, {address.CityTown}, {address.Province}, {address.PostalCode}, {address.CountryCode}");
         console.Log($"{scheme}");
    }  

} 