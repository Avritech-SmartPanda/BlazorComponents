@* @using Microsoft.JSInterop
@using Property365.Web.Components
@using Property365.Web.Components.Rendering
@using Microsoft.AspNetCore.Components.Forms;
@using Models;
@using System.ComponentModel.DataAnnotations

@inherits Property365Component


<EditForm Model="@address" >
     <DataAnnotationsValidator />
    <div class="flex flex-col py-4 sm:px-56 bg-light sm:min-h-90 ">
    <div class="border p-2 sm:p-6 rounded-md">
        <div class="py-4 flex flex-col">
            <ul class="grid grid-cols-3 gap-4 mb-4">
                @foreach (var addressType in new[] { AddressTypes.Postal, AddressTypes.Physical,
                AddressTypes.Residential })
                {
                    <li class="relative">
                        <input name="addressType" id="@addressType" class="sr-only peer" type="radio"
                        value="@addressType" checked="@(currentType == addressType)"
                        @onchange="@(() => { address.AddressType = addressType.ToString(); currentType = addressType; })">
                        <label for="@addressType"
                        class="flex flex-col items-center p-5 bg-white border border-gray-300 rounded cursor-pointer  focus:outline-none  hover:bg-gray-50 peer-checked:ring-info-900  peer-checked:ring-2 peer-checked:border-transparent">
                            @switch (addressType.ToString())
                            {
                                case "Postal":
                                    <Property365Icon Icon="mark_as_unread" />
                                    break;
                                case "Physical":
                                    <Property365Icon Icon="place" />
                                    break;
                                case "Residential":
                                    <Property365Icon Icon="home" />
                                    break;
                            }
                            <span class="text-xs uppercase sm:text-base">@addressType.ToString()</span>
                        </label>
                    </li>
                }
        </ul>
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 w-full">
            <div class="flex flex-col w-full sm: sm:col-span-2 space-y-2">
                <Property365Label Text="Address Line 1"
                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                <Property365TextBox style="width: 100%;" Name="Address1" @bind-Value="address.Address1" />
                <Property365RequiredValidator Component="Address1" Text="Address line 1 is required"
                    class="text-red-500 " />
            </div>
            <div class="flex flex-col w-full  sm:col-span-2 space-y-2">
                <Property365Label Text="Address Line 2"
                    class="block text-sm font-medium leading-5 text-gray-500" />
                <Property365TextBox style="width: 100%;" Name="Address2" @bind-Value="address.Address2" />
            </div>

            <div class="flex flex-col w-full space-y-2">
                <Property365Label Text="City"
                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                <Property365TextBox style="width: 100%;" Name="City" @bind-Value="address.City" />
                <Property365RequiredValidator Component="City" Text="City is required"
                    class="text-red-500 " />
            </div>

            <div class="flex flex-col w-full space-y-2">
                <Property365Label Text="State/Province/Region"
                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                <Property365TextBox style="width: 100%;" Name="State" @bind-Value="address.State" />
                <Property365RequiredValidator Component="State" Text="Province is required"
                    class="text-red-500 " />
            </div>
            <div class="flex flex-col w-full space-y-2">
                <Property365Label Text="Country"
                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
                <Property365DropDown @bind-Value="address.Country" Placeholder="South Africa"
                    Data="@countries" TextProperty="Name" ValueProperty="Name" Name="Country">
                </Property365DropDown>
                <Property365RequiredValidator Component="Country" Text="Country is required"
                    class="text-red-500 " />
            </div>
            <div class="flex flex-col w-full space-y-2">
                <Property365Label Text="Zip/Postal Code"
                    class="after:content-['*'] after:ml-0.5 after:text-red-500 block text-sm font-medium leading-5 text-gray-500" />
    <div class="flex flex-col">
                    <Property365TextBox Name="Zip"  @bind-Value=address.PostalCode/>
                    <Property365RequiredValidator Component="PostalCode" Text="Postal code is required"
                        class="text-red-500 " />
                    <Property365RegexValidator Component="PostalCode" Text="Postal code must be 4 digits"
                        Pattern="\d{4}" class="text-red-500 " />
                </div> 
            </div>

        </div>
    </div>
    </div>
</div> 
        <div class="py-4 sm:px-56 mt-4">
        <div class="w-full flex  justify-end space-x-2">
            <Property365Button ButtonType="ButtonType.Submit" form="AddressFormID" ButtonStyle="ButtonStyle.Primary"
                Text="Save" />
        </div>
    </div>
</EditForm>


@code {    
    enum AddressTypes { Postal, Physical, Residential };
    AddressTypes currentType = AddressTypes.Postal;
    AddressViewModel address = new AddressViewModel();


    List<Country> countries = new List<Country>()
    {
        new Country() { Name = "South Africa" },
        new Country() { Name = "Botswana" },
        new Country() { Name = "Namibia" },
        new Country() { Name = "Swaziland" },
        new Country() { Name = "Zimbabwe" },
        new Country() { Name = "Lesotho" }
    };



   

} *@
